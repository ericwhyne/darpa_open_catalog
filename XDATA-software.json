[
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Boeing",
            "University of Pittsburgh"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"SMILE-WIDE:  A scalable Bayesian network library",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/ANL/Boeing+-+Pitt",
        "External Link":"http://smilewide.github.io/main/",
        "Public Code Repo":"https://github.com/SmileWide/main.git",
        "Instructional Material":"",
        "Stats":"main",
        "Description":"SMILE-WIDE is a scalable Bayesian network library. Initially, it is a version of the SMILE library, as in SMILE With Integrated Distributed Execution. The general approach has been to provide an API similar to the existing API SMILE developers use to build \"local,\" single-threaded applications. However, we provide \"vectorized\" operations that hide a Hadoop-distributed implementation. Apart from invoking a few idioms like generic Hadoop command line argument parsing, these appear to the developer as if they were executed locally. (Java)",
        "Internal Code Repo":"tools\\analytics\\boeing-pitt\\smile-wide-final-summercamp",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Java"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":""
    },
	{
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Aptima, Inc."
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Network Query by Example",
        "Internal Link":"",
        "External Link":"https://github.com/Aptima/pattern-matching",
        "Public Code Repo":"https://github.com/Aptima/pattern-matching.git",
        "Instructional Material":"Not Available",
        "Stats":"pattern-matching",
        "Description":"Hadoop MapReduce-over-Hive based implementation of network query by example utilizing attributed network pattern matching. (Java)",
        "Internal Code Repo":"",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Java"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":"20140820"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Carnegie Mellon University"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"skl-groups",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/pages/viewpage.action?pageId=6717624",
        "External Link":"https://github.com/dougalsutherland/skl-groups/",
        "Public Code Repo":"https://github.com/dougalsutherland/skl-groups.git",
        "Instructional Material":"https://dougalsutherland.github.io/skl-groups/",
        "Stats":"skl-groups",
        "Description":"A package extending the Python machine learning toolkit scikit-learn with support for operating on sets (\"groups\") as features.",
        "Internal Code Repo":"tools\\analytics\\cmu",
        "License":[
            "BSD"
        ],
        "Languages":[
            "Python"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Continuum Analytics"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Blaze",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/VIS/Continuum+Analytics+Home+Page",
        "External Link":"https://github.com/ContinuumIO/blaze",
        "Public Code Repo":"https://github.com/ContinuumIO/blaze.git",
        "Instructional Material":"http://blaze.pydata.org/docs/",
        "Stats":"blaze",
        "Description":"Blaze is the next-generation of NumPy. It is designed as a foundational set of abstractions on which to build out-of-core and distributed algorithms over a wide variety of data sources and to extend the structure of NumPy itself. Blaze allows easy composition of low level computation kernels (C, Fortran, Numba) to form complex data transformations on large datasets. In Blaze, computations are described in a high-level language (Python) but executed on a low-level runtime (outside of Python), enabling the easy mapping of high-level expertise to data without sacrificing low-level performance. Blaze aims to bring Python and NumPy into the massively-multicore arena, allowing it to leverage many CPU and GPU cores across computers, virtual machines and cloud services. (Python)",
        "Internal Code Repo":"tools\\analytics\\continuum\\blaze",
        "License":[
            "BSD"
        ],
        "Languages":[
            "Python"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":"20140620"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Continuum Analytics"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Numba",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/VIS/Continuum+Analytics+Home+Page",
        "External Link":"https://github.com/numba/numba",
        "Public Code Repo":"https://github.com/numba/numba.git",
        "Instructional Material":"http://numba.pydata.org/",
        "Stats":"numba",
        "Description":"Numba is an Open Source NumPy-aware optimizing compiler for Python sponsored by Continuum Analytics, Inc. It uses the LLVM compiler infrastructure to compile Python syntax to machine code.<br/><br/>It is aware of NumPy arrays as typed memory regions and so can speed-up code using NumPy arrays. Other, less well-typed code is translated to Python C-API calls effectively removing the \"interpreter\" but not removing the dynamic indirection.<br/><br/>Numba is also not a tracing just in time (JIT) compiler. It compiles your code before it runs either using run-time type information or type information you provide in the decorator.<br/><br/>Numba is a mechanism for producing machine code from Python syntax and typed data structures such as those that exist in NumPy. (Python)",
        "Internal Code Repo":"tools\\analytics\\continuum\\numba",
        "License":[
            "BSD"
        ],
        "Languages":[
            "Python"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":"20140620"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Continuum Analytics"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Bokeh",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/VIS/Continuum+Analytics+Home+Page",
        "External Link":"http://bokeh.pydata.org",
        "Public Code Repo":"https://github.com/ContinuumIO/bokeh.git",
        "Instructional Material":"http://bokeh.pydata.org",
        "Stats":"bokeh",
        "Description":"Bokeh (pronounced bo-Kay or bo-Kuh) is a Python interactive visualization library for large datasets that natively uses the latest web technologies. Its goal is to provide elegant, concise construction of novel graphics in the style of Protovis/D3, while delivering high-performance interactivity over large data to thin clients. (Python/JavaScript/Coffeescript)",
        "Internal Code Repo":"tools/visualization/continuum/bokeh; tools/visualization/continuum/bokehjs",
        "License":[
            "BSD"
        ],
        "Languages":[
            "Python",
            "JavaScript",
            "Coffeescript"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Visualization"
        ],
        "New Date":"",
        "Update Date":"20140620"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Data Tactics Corporation"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Vowpal Wabbit",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/ANL/Cloud+Analytics+for+Structure+Extractions+%28CASE%29+Group",
        "External Link":"https://github.com/JohnLangford/vowpal_wabbit",
        "Public Code Repo":"https://github.com/JohnLangford/vowpal_wabbit.git",
        "Instructional Material":"",
        "Stats":"vowpal_wabbit",
        "Description":"The Vowpal Wabbit (VW) project is a fast out-of-core learning system sponsored by Microsoft Research and (previously) Yahoo! Research. Support is available through the mailing list. There are two ways to have a fast learning algorithm: (a) start with a slow algorithm and speed it up, or (b) build an intrinsically fast learning algorithm. This project is about approach (b), and it's reached a state where it may be useful to others as a platform for research and experimentation. There are several optimization algorithms available with the baseline being sparse gradient descent (GD) on a loss function (several are available). The code should be easily usable. Its only external dependence is on the boost library, which is often installed by default. (C)",
        "Internal Code Repo":"tools\\analytics\\dt",
        "License":[
            "BSD"
        ],
        "Languages":[
            "C"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Visualization"
        ],
        "New Date":"",
        "Update Date":""
    },
        {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Data Tactics Corporation"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Darpa Open Catalog Generator",
        "Internal Link":"",
        "External Link":"https://github.com/ericwhyne/open-catalog-generator",
        "Public Code Repo":"https://github.com/ericwhyne/open-catalog-generator.git",
        "Instructional Material":"",
        "Stats":"open-catalog-generator",
        "Description":"Code and templates for building the DARPA open catalog as hosted on darpa.mil.",
        "Internal Code Repo":"",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Python"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Data Tactics Corporation"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Circuit",
        "Internal Link":"",
        "External Link":"http://www.gocircuit.org/",
        "Public Code Repo":"https://github.com/gocircuit/circuit.git",
        "Instructional Material":"",
        "Stats":"circuit",
        "Description":"Circuit reduces the human development and sustenance costs of complex massively-scaled systems nearly to the level of their single-process counterparts. It is a combination of proven ideas from the Erlang ecosystem of distributed embedded devices and Go's ecosystem of Internet application development. Circuit extends the reach of Go's linguistic environment to multi-host/multi-process applications. (Go)",
        "Internal Code Repo":"",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Go"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":"20140612"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Georgia Tech / GTRI"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"SmallK: A high-performance library for nonnegative matrix factorization and hierarchical clustering",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/pages/viewpage.action?pageId=7274597",
        "External Link":"https://github.com/smallk/smallk.github.io.git",
        "Public Code Repo":"https://github.com/smallk/smallk.github.io.git",
        "Instructional Material":"http://smallk.github.io/",
        "Stats":"smallk.github.io",
        "Description":"SmallK is a high-performance, parallel library for nonnegative matrix factorization on both dense and sparse matrices written in C++. Implementations of several different NMF algorithms are provided, including multiplicative updating, hierarchical alternating least squares, nonnegative least squares with block principal pivoting, and a new rank2 algorithm. The library provides an implementation of hierarchical clustering based on the rank2 NMF algorithm. (C++)",
        "Internal Code Repo":"tools\\analytics\\gatech\\_x000D_\n",
        "License":[
            "ALv2"
        ],
        "Languages":[
            ""
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program": "XDATA",
        "Program Teams": ["Giant Oak, Inc."],
        "Contributors": ["Dr. W. Graham Mueller"],
        "Sub-contractors": [""],
        "Software": "Markov modulated Poisson process for event detection (MMPP)",
        "Internal Link": "",
        "External Link": "https://github.com/giantoak/MMPP",
        "Public Code Repo": "https://github.com/giantoak/MMPP.git",
        "Instructional Material": "http://giantoak.github.io/MMPP_Tutorial/",
        "Stats": "MMPP",
        "Description": "Markov Modulated Poisson Process for Event Detection allows R users to accurately detect unusual events and anomalies in time series of counts.",
        "Internal Code Repo": "",
        "License": ["GPLv2"],
        "Languages": ["R"],
        "Platform Requirements": [""],
        "Dependent modules": [""],
        "Dependent module URLs": [""],
        "Component modules": [""],
        "Component module URLs": [""],
        "Industry": [""],
        "Functionality": [""],
        "Categories": ["Analytics"],
        "New Date": "",
        "Update Date": "20151221"
    },
    {
        "DARPA Program": "XDATA",
        "Program Teams": ["Giant Oak, Inc."],
        "Contributors": [""],
        "Sub-contractors": [""],
        "Software": "Markov modulated Poisson process for event detection (MMPP)",
        "Internal Link": "",
        "External Link": "https://github.com/giantoak/mmpp_julia",
        "Public Code Repo": "https://github.com/giantoak/mmpp_julia.git",
        "Instructional Material": "",
        "Stats": "MMPP_j",
        "Description": "Markov Modulated Poisson Process for Event Detection allows R users to accurately detect unusual events and anomalies in time series of counts.",
        "Internal Code Repo": "",
        "License": ["GPLv2"],
        "Languages": ["Julia"],
        "Platform Requirements": [""],
        "Dependent modules": [""],
        "Dependent module URLs": [""],
        "Component modules": [""],
        "Component module URLs": [""],
        "Industry": [""],
        "Functionality": [""],
        "Categories": ["Analytics"],
        "New Date": "",
        "Update Date": "20151221"
    },
    {
        "DARPA Program": "XDATA",
        "Program Teams": ["Giant Oak, Inc."],
        "Contributors": ["Dr. W. Graham Mueller"],
        "Sub-contractors": [""],
        "Software": "Markov modulated Poisson process for event detection (MMPP)",
        "Internal Link": "",
        "External Link": "https://github.com/giantoak/mmppr",
        "Public Code Repo": "https://github.com/giantoak/mmppr.git",
        "Instructional Material": "http://giantoak.github.io/MMPP_Tutorial/",
        "Stats": "MMPP_r",
        "Description": "Markov Modulated Poisson Process for Event Detection allows R users to accurately detect unusual events and anomalies in time series of counts.",
        "Internal Code Repo": "",
        "License": ["GPLv2"],
        "Languages": ["R"],
        "Platform Requirements": [""],
        "Dependent modules": [""],
        "Dependent module URLs": [""],
        "Component modules": [""],
        "Component module URLs": [""],
        "Industry": [""],
        "Functionality": [""],
        "Categories": ["Analytics"],
        "New Date": "",
        "Update Date": "20151221"
    },
    {
        "DARPA Program": "XDATA",
        "Program Teams": ["Giant Oak, Inc."],
        "Contributors": [""],
        "Sub-contractors": [""],
        "Software": "Unicorn",
        "Internal Link": "",
        "External Link": "",
        "Public Code Repo": "https://github.com/giantoak/unicorn.git",
        "Instructional Material": "",
        "Stats": "Unicorn",
        "Description": "Unicorn is a document exploitation tool. A given installation can be used to: ingest free text corpora (e.g. Documents, Scans, and PDFs) into an Elasticsearch document store; query the documents via a Javascript GUI to find different salient features, topics, co-occurances; and visualize the results of those queries.\nThe tool here works best with long-form, free text documents, but can be adapted as needed for other formats.",
        "Internal Code Repo": "",
        "License": ["MIT"],
        "Languages": ["Python", "SQL", "bash", "JavaScript"],
        "Platform Requirements": [""],
        "Dependent modules": [""],
        "Dependent module URLs": [""],
        "Component modules": [""],
        "Component module URLs": [""],
        "Industry": [""],
        "Functionality": [""],
        "Categories": ["Analytics"],
        "New Date": "20151222",
        "Update Date": ""
    },
        {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Stanford"
        ],
        "Contributors":[
            "Jack Poulson"
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Elemental: Distributed-memory dense and sparse-direct linear algebra, Interior Point Methods, and lattice reduction",
        "Internal Link":"",
        "External Link":"http://libelemental.org",
        "Public Code Repo":"https://github.com/elemental/Elemental.git",
        "Instructional Material":"",
        "Stats":"Elemental",
        "Description":"Elemental is a modern distributed-memory (C++11/MPI) library for dense and sparse-direct linear algebra, Interior Point Methods, and lattice reduction.",
        "Internal Code Repo":"",
        "License":[
            "BSDv2"
        ],
        "Languages":[
            "C++",
            "C",
            "Fortran",
            "Python"
        ],
        "Platform Requirements":[
            "MPI"
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"20160111",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "IBM Research"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"SKYLARK: Randomized Numerical Linear Algebra and ML",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/pages/viewpage.action?pageId=2752591",
        "External Link":"http://xdata-skylark.github.io/libskylark/",
        "Public Code Repo":"https://github.com/xdata-skylark/libskylark.git",
        "Instructional Material":"",
        "Stats":"libskylark",
        "Description":"SKYLARK implements Numerical Linear Algebra (NLA) kernels based on sketching for distributed computing platforms.  Sketching reduces dimensionality through randomization, and includes Johnson-Lindenstrauss random projection (JL); a faster version of JL based on fast transform techniques; sparse techniques that can be applied in time proportional to the number of nonzero matrix entries; and methods for approximating kernel functions and Gram matrices arising in nonlinear statistical modeling problems. We have a library of such sketching techniques, built using MPI in C++ and callable from Python, and are applying the library to regression, low-rank approximation,   and kernel-based machine learning tasks, among other problems. (C++/Python)",
        "Internal Code Repo":"tools\\analytics\\ibm\\skylark",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "C++",
            "Python"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Institute for Creative Technologies",
            "USC"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Immersive Body-Based Interactions",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/pages/viewpage.action?pageId=7274668",
        "External Link":"",
        "Public Code Repo":"http://code.google.com/p/svnmimir/source/checkout",
        "Instructional Material":"Not Available",
        "Stats":"immersive_body-based_interactions",
        "Description":"Provides innovative interaction techniques to address human-computer interaction challenges posed by Big Data.  Examples include:<br>* Wiggle Interaction Technique: user-induced motion to speed visual search.<br>* Immersive Tablet Based Viewers: low-cost 3D virtual reality fly-throughs of data sets.<br>* Multi-touch interfaces: browsing/querying multi-attribute and geospatial data, hosted by SOLR.<br>* Tablet-based visualization controller: eye-free rapid interaction with visualizations.",
        "Internal Code Repo":"tools\\visualizations\\usc-ict",
        "License":[
            "ALv2"
        ],
        "Languages":[
            ""
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Visualization"
        ],
        "New Date":"",
        "Update Date":"20140820"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "USC"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Parallel Louvain Community",
        "Internal Link":"",
        "External Link":"https://github.com/usc-cloud/parallel-louvain-modularity",
        "Public Code Repo":"https://github.com/usc-cloud/parallel-louvain-modularity.git",
        "Instructional Material":"https://github.com/usc-cloud/parallel-louvain-modularity/blob/master/README.md",
        "Stats":"parallel-louvain-modularity",
        "Description":"Fast MPI based parallel Louvain community detection algorithm easily mappable to Map Reduce.",
        "Internal Code Repo":"",
        "License":[
            "ALv2"
        ],
        "Languages":[
            ""
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"20140613",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "USC"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Parallel High Betweenness Nodes identification",
        "Internal Link":"",
        "External Link":"https://github.com/usc-cloud/parallel-high-betweenness-centrality",
        "Public Code Repo":"https://github.com/usc-cloud/parallel-high-betweenness-centrality.git",
        "Instructional Material":"https://github.com/usc-cloud/parallel-high-betweenness-centrality/blob/master/README.md",
        "Stats":"parallel-high-betweenness-centrality",
        "Description":"Fast MPI based high betweenness centrality identification algorithm extendible to cloud graph processing platforms such as Giraph++ or GoFFish.",
        "Internal Code Repo":"",
        "License":[
            "ALv2"
        ],
        "Languages":[
            ""
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"20140613",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Johns Hopkins University"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"igraph",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/ANL/Johns+Hopkins+University",
        "External Link":"https://github.com/igraph/igraph",
        "Public Code Repo":"https://github.com/igraph/xdata-igraph.git",
        "Instructional Material":"http://igraph.org",
        "Stats":"xdata-igraph",
        "Description":"igraph is a collection of network analysis tools with the emphasis on efficiency, portability and ease of use. igraph can be programmed in GNU R, Python and C/C++.",
        "Internal Code Repo":"tools\\analytics\\jhu",
        "License":[
            "GPLv2"
        ],
        "Languages":[
            "C",
            "R",
            "Python"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Trifacta (Stanford, University of Washington, Kitware, Inc. Team)"
        ],
        "Contributors":[
            "Trifacta"
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Vega",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/VIS/Visual+Design+Environment-Kitware+Home",
        "External Link":"https://github.com/trifacta/vega",
        "Public Code Repo":"https://github.com/trifacta/vega.git",
        "Instructional Material":"",
        "Stats":"vega",
        "Description":"Vega is a visualization grammar, a declarative format for creating and saving visualization designs. With Vega you can describe data visualizations in a JSON format, and generate interactive views using either HTML5 Canvas or SVG. (JavaScript)",
        "Internal Code Repo":"tools\\visualizations\\kitware\\vega",
        "License":[
            "BSD"
        ],
        "Languages":[
            "JavaScript"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Visualization"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program": "XDATA", 
        "Program Teams": [
            "Kitware, Inc.", 
            "Sotera Defense Solutions, Inc."
        ], 
        "Contributors": [
            "University of Southern California", 
            "Stanford University"
        ], 
        "Sub-contractors": [
            "Giant Oak, Inc."
        ], 
        "Software": "Tangelo", 
        "Internal Link": "https://xd-wiki.xdata.data-tactics-corp.com:8443/display/VIS/Visual+Design+Environment-Kitware+Home", 
        "External Link": "http://kitware.github.io/tangelo/", 
        "Public Code Repo": "https://github.com/Kitware/tangelo.git", 
        "Instructional Material": "", 
        "Stats": "tangelo", 
        "Description": "Tangelo provides a flexible HTML5 web server architecture that cleanly separates your web applications (pure JavaScript, HTML, and CSS) and web services (pure Python). This software is bundled with some great tools to get you started. (JavaScript/Python)", 
        "Internal Code Repo": "tools\\visualizations\\kitware\\tangelo; tools\\visualizations\\kitware\\xdata-apps", 
        "License": [
            "ALv2"
        ], 
        "Languages": [
            "JavaScript", 
            "Python"
        ], 
        "Platform Requirements": [
            "Linux Redhat"
        ], 
        "Dependent modules": [
            ""
        ], 
        "Dependent module URLs": [
            ""
        ], 
        "Component modules": [
            ""
        ], 
        "Component module URLs": [
            ""
        ], 
        "Industry": [
            "Medicine"
        ], 
        "Functionality": [
            "Dynamic Web Applications", 
            "HTML5"
        ], 
        "Categories": [
            "Visualization"
        ], 
        "New Date": "", 
        "Update Date": "20150310"
    },
    {
        "DARPA Program": "XDATA", 
        "Program Teams": [
            "Sotera Defense Solutions, Inc."
        ], 
        "Contributors": [
            "Sotera Defense Solutions, Inc."
        ], 
        "Sub-contractors": [
            ""
        ], 
        "Software": "Newman", 
        "Internal Link": "", 
        "External Link": "http://github.com/Sotera/newman", 
        "Public Code Repo": "https://github.com/Sotera/newman", 
        "Instructional Material": "", 
        "Stats": "", 
        "Description": "Newman is a tool to quickly analyze and explore email using advanced analytics and visualization techniques - things not possible with traditional email applications. (JavaScript, Python)", 
        "Internal Code Repo": "", 
        "License": [
            "ALv2"
        ], 
        "Languages": [
            "JavaScript", 
            "Python"
        ], 
        "Platform Requirements": [
            ""
        ], 
        "Dependent modules": [
            ""
        ], 
        "Dependent module URLs": [
            ""
        ], 
        "Component modules": [
            ""
        ], 
        "Component module URLs": [
            ""
        ], 
        "Industry": [
            ""
        ], 
        "Functionality": [
            "email"
        ], 
        "Categories": [
            "Visualization"
        ], 
        "New Date": "20150310", 
        "Update Date": ""
    },
    {
    	"DARPA Program": "XDATA",
    	"Program Teams": [
        	"Sotera Defense Solutions, Inc."
    	],
    	"Contributors": [
        	"Sotera Defense Solutions, Inc."
    	],
    	"Sub-contractors": [""],
    	"Software": "GEQE",
    	"Internal Link": "",
    	"External Link": "http://sotera.github.io/GEQE/",
    	"Public Code Repo": "https://github.com/Sotera/GEQE",
    	"Instructional Material": "",
    	"Stats": "GEQE",
    	"Description": "Geo Event Quey by Example - Leverage geo-located temporal text data in order to identify similar locations or events. (JavaScript, Python)",
    	"Internal Code Repo": "",
    	"License": [
        	"UN"
    	],
    	"Languages": [
        	"JavaScript",
        	"Python"
    	],
    	"Platform Requirements": [
        	"Apache Spark",
        	"ElasticSearch",
        	"Node JS",
        	"StrongLoop",
        	"MongoDB"
    	],
    	"Dependent modules": [""],
    	"Dependent module URLs": [""],
    	"Component modules": [""],
    	"Component module URLs": [""],
    	"Industry": [""],
    	"Functionality": [
        	"geo-temporal text analysis / detection"
    	],
    	"Categories": [
        	"Analytics"
    	],
    	"New Date": "20150903",
    	"Update Date": ""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Harvard University",
            "Kitware, Inc."
        ],
        "Contributors":[
            "Johannes Kepler University Linz"
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"LineUp",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/VIS/Visual+Design+Environment-Kitware+Home",
        "External Link":"http://lineup.caleydo.org",
        "Public Code Repo":"https://github.com/Caleydo/org.caleydo.vis.lineup.demos.git",
        "Instructional Material":"",
        "Stats":"org.caleydo.vis.lineup.demos",
        "Description":"LineUp is a novel and scalable visualization technique that uses bar charts. This interactive technique supports the ranking of items based on multiple heterogeneous attributes with different scales and semantics. It enables users to interactively combine attributes and flexibly refine parameters to explore the effect of changes in the attribute combination. This process can be employed to derive actionable insights as to which attributes of an item need to be modified in order for its rank to change. Additionally, through integration of slope graphs, LineUp can also be used to compare multiple alternative rankings on the same set of items, for example, over time or across different attribute combinations. We evaluate the effectiveness of the proposed multi-attribute visualization technique in a qualitative study. The study shows that users are able to successfully solve complex ranking tasks in a short period of time. (Java)",
        "Internal Code Repo":"tools\\visualizations\\kitware\\xdata-apps",
        "License":[
            "BSD"
        ],
        "Languages":[
            "Java"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Visualization"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Harvard University",
            "Kitware, Inc."
        ],
        "Contributors":[
            "Johannes Kepler University Linz"
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"LineUp Web",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/VIS/Visual+Design+Environment-Kitware+Home",
        "External Link":"http://lineup.caleydo.org",
        "Public Code Repo":"https://github.com/Caleydo/lineup.js.git",
        "Instructional Material":"",
        "Stats":"lineup.js",
        "Description":"LineUpWeb is the web version of the novel and scalable visualization technique. This interactive technique supports the ranking of items based on multiple heterogeneous attributes with different scales and semantics. It enables users to interactively combine attributes and flexibly refine parameters to explore the effect of changes in the attribute combination.",
        "Internal Code Repo":"tools\\visualizations\\kitware\\xdata-apps",
        "License":[
            "BSD"
        ],
        "Languages":[
            ""
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Visualization"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "The New School"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Visualization Widgets",
        "External Link":"https://github.com/piim/xdata-visualization-widgets",
        "Public Code Repo":"https://github.com/piim/xdata-visualization-widgets.git",
        "Instructional Material":"Not Available",
        "Stats":"xdata-visualization-widgets",
        "Description":"These visualizations were created to demonstrate the type of standalone visualization widgets that might compliment a composite dashboard display for a decision-maker. They are built using D3 and leverage relevant APIs to show the latest available data. (JavaScript)",
        "Internal Code Repo":"tools\\visualizations\\new-school",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "JavaScript"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Visualization"
        ],
        "New Date":"",
        "Update Date":"20140820"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Stanford University",
            "University of Washington",
            "Kitware, Inc."
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Lyra",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/VIS/Visual+Design+Environment-Kitware+Home",
        "External Link":"http://idl.cs.washington.edu/projects/lyra",
        "Public Code Repo":"https://github.com/uwdata/lyra.git",
        "Instructional Material":"",
        "Stats":"lyra",
        "Description":"Lyra is an interactive environment that makes custom visualization design accessible to a broader audience. With Lyra, designers map data to the properties of graphical marks to author expressive visualization designs without writing code. Marks can be moved, rotated and resized using handles; relatively positioned using connectors; and parameterized by data fields using property drop zones. Lyra also provides a data pipeline interface for iterative, visual specification of data transformations and layout algorithms. Visualizations created with Lyra are represented as specifications in Vega, a declarative visualization grammar that enables sharing and reuse. (JavaScript)",
        "Internal Code Repo":"tools\\visualizations\\kitware\\xdata-apps",
        "License":[
            "BSD"
        ],
        "Languages":[
            "JavaScript"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Visualization"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Phronesis"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"stat_agg",
        "Internal Link":"",
        "External Link":"https://github.com/kaneplusplus/stat_agg",
        "Public Code Repo":"https://github.com/kaneplusplus/stat_agg.git",
        "Instructional Material":"",
        "Stats":"stat_agg",
        "Description":"stat_agg is a Python package that provides statistical aggregators that maximize ensemble prediction accuracy by weighting individual learners in an optimal way. When used with the laputa package, learners may be distributed across a cluster of machines. The package also provides fault-tolerance when one or more learners becomes unavailable. (Python)",
        "Internal Code Repo":"",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Python"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Phronesis"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"flexmem",
        "Internal Link":"",
        "External Link":"https://github.com/kaneplusplus/flexmem",
        "Public Code Repo":"https://github.com/kaneplusplus/flexmem.git",
        "Instructional Material":"",
        "Stats":"flexmem",
        "Description":"Flexmem is a general, transparent tool for out-of-core (OOC) computing in the R programming environment. It is launched as a command line utility, taking an application as an argument. All memory allocations larger than a specified threshold are memory-mapped to a binary file. When data are not needed, they are stored on disk. It is both process- and thread-safe. (C)",
        "Internal Code Repo":"",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "C"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Phronesis"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"laputa",
        "Internal Link":"",
        "External Link":"https://github.com/kaneplusplus/laputa",
        "Public Code Repo":"https://github.com/kaneplusplus/laputa.git",
        "Instructional Material":"",
        "Stats":"laputa",
        "Description":"Laputa is a Python package that provides an elastic, parallel computing foundation for the stat_agg (statistical aggregates) package. (Python)",
        "Internal Code Repo":"",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Python"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Phronesis"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"bigmemory",
        "Internal Link":"",
        "External Link":"http://bigmemory.org/",
        "Public Code Repo":"http://cran.r-project.org/web/packages/bigmemory/index.html",
        "Instructional Material":"",
        "Stats":"",
        "Description":"Bigmemory is an R package to create, store, access, and manipulate massive matrices. Matrices are allocated to shared memory and may use memory-mapped files. Packages biganalytics, bigtabulate, synchronicity, and bigalgebra provide advanced functionality. (R)",
        "Internal Code Repo":"",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "R"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Phronesis"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"bigalgebra",
        "Internal Link":"",
        "External Link":"http://bigmemory.org/",
        "Public Code Repo":"https://r-forge.r-project.org/scm/viewvc.php/?root=bigmemory",
        "Instructional Material":"",
        "Stats":"",
        "Description":"Bigalgebra is an R package that provides arithmetic functions for R matrix and big.matrix objects. (R)",
        "Internal Code Repo":"",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "R"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Jet Propulsion Laboratory"
        ],
        "Contributors":[
            "Dr. Chris A. Mattmann",
            "Mr. Paul Ramirez",
            "Mr. Maziyar Boustani",
            "Ms. Shakeh Khudikyan",
            "Mr. Mike Joyce",
            "Mr. Rishi Verma",
            "Dr. Lewis John McGibbney",
            "Mr. Tyler Palsulich" 
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Apache OODT",
        "Internal Link":"https://xd-web-proxy.data-tactics-corp.com/wiki/display/XSW2/NASA+JPL+Wiki",
        "External Link":"http://oodt.apache.org/",
        "Public Code Repo":"https://svn.apache.org/repos/asf/oodt/",
        "Instructional Material":"https://cwiki.apache.org/confluence/display/OODT/Home",
        "Stats":"",
        "Description":"APACHE OODT enables transparent access to distributed resources, data discovery and query optimization, and distributed processing and virtual archives. OODT provides software architecture that enables models for information representation, solutions to knowledge capture problems, unification of technology, data, and metadata. (Java)",
        "Internal Code Repo":"tools\\utilities\\oodt",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Java",
            "Python"
        ],
        "Platform Requirements":[
            "*nix Environment"
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            "agility",
            "app",
            "balance",
            "catalog",
            "cli",
            "commons",
            "core",
            "crawler",
            "curator",
            "filemgr",
            "grid",
            "metadata",
            "mvn",
            "opendapps",
            "pcs",
            "pge",
            "product",
            "profile",
            "protocol",
            "pushpull",
            "resource",
            "sso",
            "tools",
            "webapp",
            "workflow",
            "xmlps",
            "xmlquery"
        ],
        "Component module URLs":[
            "http://svn.apache.org/repos/asf/oodt/trunk/agility/",
            "http://svn.apache.org/repos/asf/oodt/trunk/app/",
            "http://svn.apache.org/repos/asf/oodt/trunk/balance/",
            "http://svn.apache.org/repos/asf/oodt/trunk/catalog/",
            "http://svn.apache.org/repos/asf/oodt/trunk/cli/",
            "http://svn.apache.org/repos/asf/oodt/trunk/commons/",
            "http://svn.apache.org/repos/asf/oodt/trunk/core/",
            "http://svn.apache.org/repos/asf/oodt/trunk/crawler/",
            "http://svn.apache.org/repos/asf/oodt/trunk/curator/",
            "http://svn.apache.org/repos/asf/oodt/trunk/filemgr/",
            "http://svn.apache.org/repos/asf/oodt/trunk/grid/",
            "http://svn.apache.org/repos/asf/oodt/trunk/metadata/",
            "http://svn.apache.org/repos/asf/oodt/trunk/mvn/",
            "http://svn.apache.org/repos/asf/oodt/trunk/opendapps/",
            "http://svn.apache.org/repos/asf/oodt/trunk/pcs/",
            "http://svn.apache.org/repos/asf/oodt/trunk/pge/",
            "http://svn.apache.org/repos/asf/oodt/trunk/product/",
            "http://svn.apache.org/repos/asf/oodt/trunk/profile/",
            "http://svn.apache.org/repos/asf/oodt/trunk/protocol/",
            "http://svn.apache.org/repos/asf/oodt/trunk/pushpull/",
            "http://svn.apache.org/repos/asf/oodt/trunk/resource/",
            "http://svn.apache.org/repos/asf/oodt/trunk/sso/",
            "http://svn.apache.org/repos/asf/oodt/trunk/tools/",
            "http://svn.apache.org/repos/asf/oodt/trunk/webapp/",
            "http://svn.apache.org/repos/asf/oodt/trunk/workflow/",
            "http://svn.apache.org/repos/asf/oodt/trunk/xmlps/",
            "http://svn.apache.org/repos/asf/oodt/trunk/xmlquery/"
        ],
        "Industry":[
            "Federally Funded Research and Development Centre"
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":"20140610"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "USC/Information Sciences Institute"
        ],
        "Contributors":[
            "Dr. Yolanda Gil",
            "Mr. Varun Ratnakar"
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Wings",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/pages/viewpage.action?pageId=6717613",
        "External Link":"http://www.wings-workflows.org/",
        "Public Code Repo":"https://github.com/IKCAP/wings.git",
        "Instructional Material":"http://www.wings-workflows.org/tutorial",
        "Stats":"wings",
        "Description":"WINGS is a semantic workflow system that can be used to automate data analysis processes represented as workflows of computations.  A unique feature of WINGS is that its workflow representations incorporate semantic constraints about datasets and workflow components, and are used to create and validate workflows and to generate metadata for new data products. WINGS submits workflows to scalable execution frameworks such as Apache OODT to run workflows at large scale in distributed resources. (Java/JavaScript)",
        "Internal Code Repo":"tools\\utilities\\wings\\",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Java",
            "JavaScript"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":"20141031"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Jet Propulsion Laboratory"
        ],
        "Contributors":[
            "Dr. Chris A. Mattmann",
            "Mr. Paul Ramirez",
            "Mr. Maziyar Boustani",
            "Ms. Shakeh Khudikyan",
            "Mr. Mike Joyce",
            "Mr. Rishi Verma",
            "Dr. Lewis John McGibbney"
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Apache Tika",
        "Internal Link":"https://xd-web-proxy.data-tactics-corp.com/wiki/display/XSW2/NASA+JPL+Wiki",
        "External Link":"http://tika.apache.org",
        "Public Code Repo":"http://svn.apache.org/repos/asf/tika/trunk/",
        "Instructional Material":"http://tika.apache.org/1.5/gettingstarted.html",
        "Stats":"",
        "Description":"The Apache Tika(TM) toolkit detects and extracts metadata and structured text content from various documents using existing parser libraries.",
        "Internal Code Repo":"tools\\utilities\\tika",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Java"
        ],
        "Platform Requirements":[
            "Java Virtual Machine"
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            "tika-app",
            "tika-bundle",
            "tika-core",
            "tika-dotnet",
            "tika-java7",
            "tika-parent",
            "tika-parsers",
            "tika-serialization",
            "tika-server",
            "tika-translate",
            "tika-xmp"
        ],
        "Component module URLs":[
            "http://svn.apache.org/repos/asf/tika/trunk/tika-app/",
            "http://svn.apache.org/repos/asf/tika/trunk/tika-bundle/",
            "http://svn.apache.org/repos/asf/tika/trunk/tika-core/",
            "http://svn.apache.org/repos/asf/tika/trunk/tika-dotnet/",
            "http://svn.apache.org/repos/asf/tika/trunk/tika-java7/",
            "http://svn.apache.org/repos/asf/tika/trunk/tika-parent/",
            "http://svn.apache.org/repos/asf/tika/trunk/tika-parsers/",
            "http://svn.apache.org/repos/asf/tika/trunk/tika-serialization/",
            "http://svn.apache.org/repos/asf/tika/trunk/tika-server/",
            "http://svn.apache.org/repos/asf/tika/trunk/tika-translate/",
            "http://svn.apache.org/repos/asf/tika/trunk/tika-xmp/"
        ],
        "Industry":[
            "Federally Funded Research and Development Centre"
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"20140610",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Jet Propulsion Laboratory"
        ],
        "Contributors":[
            "Dr. Chris A. Mattmann",
            "Mr. Paul Ramirez",
            "Mr. Maziyar Boustani",
            "Ms. Shakeh Khudikyan",
            "Mr. Mike Joyce",
            "Mr. Rishi Verma",
            "Dr. Lewis John McGibbney"
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Apache Gora",
        "Internal Link":"https://xd-web-proxy.data-tactics-corp.com/wiki/display/XSW2/NASA+JPL+Wiki",
        "External Link":"http://gora.apache.org",
        "Public Code Repo":"https://git-wip-us.apache.org/repos/asf/gora.git",
        "Instructional Material":"http://gora.apache.org/current/quickstart.html",
        "Stats":"gora",
        "Description":"The Apache Gora open source framework provides an in-memory data model and persistence for big data. Gora supports persisting to column stores, key value stores, document stores and RDBMSs, and analyzing the data with extensive Apache Hadoop MapReduce support.",
        "Internal Code Repo":"tools\\utilities\\gora",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Java"
        ],
        "Platform Requirements":[
            "Java Virtual Machine"
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            "gora-compiler",
            "gora-compiler-cli",
            "gora-core",
            "gora-accumulo",
            "gora-cassandra",
            "gora-hbase",
            "gora-lucene",
            "gora-mongodb",
            "gora-solr",
            "gora-dynamodb"
        ],
        "Component module URLs":[
            "https://git-wip-us.apache.org/repos/asf?p=gora.git;a=tree;f=gora-accumulo;hb=HEAD",
            "https://git-wip-us.apache.org/repos/asf?p=gora.git;a=tree;f=gora-cassandra;hb=HEAD",
            "https://git-wip-us.apache.org/repos/asf?p=gora.git;a=tree;f=gora-compiler-cli;hb=HEAD",
            "https://git-wip-us.apache.org/repos/asf?p=gora.git;a=tree;f=gora-compiler;hb=HEAD",
            "https://git-wip-us.apache.org/repos/asf?p=gora.git;a=tree;f=gora-core;hb=HEAD",
            "https://git-wip-us.apache.org/repos/asf?p=gora.git;a=tree;f=gora-dynamodb;hb=HEAD",
            "https://git-wip-us.apache.org/repos/asf?p=gora.git;a=tree;f=gora-hbase;hb=HEAD",
            "https://git-wip-us.apache.org/repos/asf?p=gora.git;a=tree;f=gora-mongodb;hb=HEAD",
            "https://git-wip-us.apache.org/repos/asf?p=gora.git;a=tree;f=gora-solr;hb=HEAD",
            "https://git-wip-us.apache.org/repos/asf?p=gora.git;a=tree;f=gora-sql;hb=HEAD"
        ],
        "Industry":[
            "Federally Funded Research and Development Centre"
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":"20140613"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Jet Propulsion Laboratory"
        ],
        "Contributors":[
            "Dr. Chris A. Mattmann",
            "Mr. Paul Ramirez",
            "Mr. Maziyar Boustani",
            "Ms. Shakeh Khudikyan",
            "Mr. Mike Joyce",
            "Mr. Rishi Verma",
            "Dr. Lewis John McGibbney"
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Apache Nutch",
        "Internal Link":"https://xd-web-proxy.data-tactics-corp.com/wiki/display/XSW2/NASA+JPL+Wiki",
        "External Link":"http://nutch.apache.org/",
        "Public Code Repo":"http://svn.apache.org/repos/asf/nutch/",
        "Instructional Material":"http://wiki.apache.org/nutch/#Tutorials",
        "Stats":"",
        "Description":"A large scale web crawler framework that implements the search engine architecture as originally defined by Brin and Page. Nutch was started by Doug Cutting and is the predecessor to the Apache Hadoop technology. It includes parsers, a protocol framework, language detection, indexing capabilities and language and query models to fully implement a search engine.",
        "Internal Code Repo":"tools\\utilities\\nutch",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Java"
        ],
        "Platform Requirements":[
            "Java Virtual Machine"
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            "nutch"
        ],
        "Component module URLs":[
            "https://svn.apache.org/repos/asf/nutch/"
        ],
        "Industry":[
            "Federally Funded Research and Development Centre"
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"20140625",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Jet Propulsion Laboratory"
        ],
        "Contributors":[
            "Dr. Chris A. Mattmann",
            "Mr. Paul Ramirez",
            "Mr. Maziyar Boustani",
            "Ms. Shakeh Khudikyan",
            "Mr. Mike Joyce",
            "Mr. Rishi Verma",
            "Dr. Lewis John McGibbney"
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"DRAT",
        "Internal Link":"https://xd-web-proxy.data-tactics-corp.com/wiki/display/XSW2/NASA+JPL+Wiki",
        "External Link":"http://github.com/chrismattmann/drat",
        "Public Code Repo":"https://github.com/chrismattmann/drat.git",
        "Instructional Material":"https://github.com/chrismattmann/drat/blob/master/README.md",
        "Stats":"drat",
        "Description":"A distributed, parallelized (Map Reduce) wrapper around Apache RAT to allow it to complete on large code repositories of multiple file types where Apache RAT hangs forever.",
        "Internal Code Repo":"tools\\utilities\\drat",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Java",
            "Python"
        ],
        "Platform Requirements":[
            "Java Virtual Machine"
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            "drat"
        ],
        "Component module URLs":[
            "https://github.com/chrismattmann/drat/"
        ],
        "Industry":[
            "Federally Funded Research and Development Centre"
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"20140612",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Jet Propulsion Laboratory"
        ],
        "Contributors":[
            "Dr. Chris A. Mattmann",
            "Mr. Paul Ramirez",
            "Mr. Maziyar Boustani",
            "Ms. Shakeh Khudikyan",
            "Mr. Mike Joyce",
            "Mr. Rishi Verma",
            "Dr. Lewis John McGibbney"
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Khooshe",
        "Internal Link":"https://xd-web-proxy.data-tactics-corp.com/wiki/display/XSW2/NASA+JPL+Wiki",
        "External Link":"https://github.com/MBoustani/Khooshe",
        "Public Code Repo":"https://github.com/MBoustani/Khooshe.git",
        "Instructional Material":"https://github.com/MBoustani/Khooshe/wiki",
        "Stats":"Khooshe",
        "Description":"A Big Data-Points Visualization Tool",
        "Internal Code Repo":"tools\\utilities\\khooshe",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Python"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            "Numpy",
            "Scipy"
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            "Khooshe"
        ],
        "Component module URLs":[
            "https://github.com/MBoustani/Khooshe"
        ],
        "Industry":[
            "Federally Funded Research and Development Centre"
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Visualization"
        ],
        "New Date":"20140805",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "MIT-LL"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Query By Example (Graph QuBE)",
        "Internal Link":"https://xdataproxy.com/wiki/display/XSW2013/MIT+Lincoln+Laboratory",
        "External Link":"https://github.com/mitll/graph-qube",
        "Public Code Repo":"https://github.com/mitll/graph-qube.git",
        "Instructional Material":"https://github.com/mitll/graph-qube/blob/master/doc/XDATA_UserManual.pdf",
        "Stats":"graph-qube",
        "Description":"Graph QuBE is a tool which enables efficient pattern-of-behavior search in data containing entities transacting over time.",
        "Internal Code Repo":"tools\\analytics\\mit-LL\\graph-qube",
        "License":[
            "ALv2"
        ],
        "Languages":[
            ""
        ],
        "Platform Requirements":[
            "Maven"
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":"20160115"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "MIT-LL"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"VizLinc",
        "Internal Link":"https://xdataproxy.com/wiki/display/XSW2013/MIT+Lincoln+Laboratory",
		"External Link":"https://github.com/mitll/vizlinc",
        "Public Code Repo":"https://github.com/mitll/vizlinc.git",
        "Instructional Material":"",
        "Stats":"vizlinc",
        "Description":"Vizlinc is a visual analytics platform that takes as input a corpus of text documents, extracts named entities (people, locations, and organizations) and the relations between those entities from the documents, and allows a user to explore the information contained in the documents from both a high-level corpus view point and with respect to more narrow queries.(Java/Groovy)",
        "Internal Code Repo":"",
        "License":[
            "GPL",
			"CDDL"
        ],
        "Languages":[
            "Java",
			"Groovy"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            "Visual Analytics",
			"Corpus Exploration"
        ],
        "Categories":[
            "Visualization"
        ],
        "New Date":"20140701",
        "Update Date":"20160115"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "MIT-LL"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Julia",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/XSW2013/MIT+Lincoln+Laboratory",
        "External Link":"http://julialang.org/",
        "Public Code Repo":"https://github.com/JuliaLang/julia.git",
        "Instructional Material":"",
        "Stats":"julia",
        "Description":"Julia is a high-level, high-performance dynamic programming language for technical computing, with syntax that is familiar to users of other technical computing environments. It provides a sophisticated compiler, distributed parallel execution, numerical accuracy, and an extensive mathematical function library.",
        "Internal Code Repo":"tools\\analytics\\mit-LL",
        "License":[
            "MIT",
            "GPL",
            "LGPL",
            "BSD"
        ],
        "Languages":[
            "Julia"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "MIT-LL"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Topic",
        "Internal Link":"https://xdataproxy.com/wiki/display/XSW2013/MIT+Lincoln+Laboratory",
        "External Link":"https://github.com/mitll/topic-clustering",
        "Public Code Repo":"https://github.com/mitll/topic-clustering.git",
        "Instructional Material":"",
        "Stats":"topic-clustering",
        "Description":"This tool takes a set of text documents, filters by a given language, and then produces documents clustered by topic.  The method used is Probabilistic Latent Semantic Analysis (PLSA). (Python)",
        "Internal Code Repo":"tools\\analytics\\mit-LL",
        "License":[
            "ALv2"
        ],
        "Languages":[
            ""
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":"20160115"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "MIT-LL"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"SciDB",
        "Internal Link":"https://xdataproxy.com/wiki/display/XSW2013/MIT+Lincoln+Laboratory",
        "External Link":"http://www.paradigm4.com/forum",
        "Public Code Repo":"http://www.paradigm4.com/forum",
        "Instructional Material":"",
        "Stats":"",
        "Description":"Scientific Database for large-scale numerical data. Register on the forum to access the download page. (C++)",
        "Internal Code Repo":"tools\\analytics\\mit-LL",
        "License":[
            "GPLv3"
        ],
        "Languages":[
            "C++"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":"20160115"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "MIT-LL"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Information Extractor",
        "Internal Link":"https://xdataproxy.com/wiki/display/XSW2013/MIT+Lincoln+Laboratory",
        "External Link":"https://github.com/mit-nlp/MITIE",
        "Public Code Repo":"https://github.com/mit-nlp/MITIE.git",
        "Instructional Material":"",
        "Stats":"MITIE",
        "Description":"Trainable named entity extractor (NER) and relation extractor. (C)",
        "Internal Code Repo":"tools\\analytics\\mit-LL\\",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "C"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":"20160115"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "MIT-LL"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"MIT-LL TweetE",
        "Internal Link":"https://xdataproxy.com/wiki/download/attachments/20120303/XDATA_PI_Meeting_20150714.pdf?version=1&modificationDate=1436898255966&api=v2",
        "External Link":"https://github.com/mitll/TweetE",
        "Public Code Repo":"https://github.com/mitll/TweetE.git",
        "Instructional Material":"",
        "Stats":"TweetE",
        "Description":"Tools for scraping twitter data, conversion, text analysis and graph construction",
        "Internal Code Repo":"tools\\analytics\\mit-LL\\",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Python"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"20160115",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "MIT-LL"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"LLHash",
        "Internal Link":"https://xdataproxy.com/wiki/download/attachments/20120303/XDATA_PI_Meeting_20150714.pdf?version=1&modificationDate=1436898255966&api=v2",
        "External Link":"https://github.com/mitll/LLHash",
        "Public Code Repo":"https://github.com/mitll/LLHash.git",
        "Instructional Material":"",
        "Stats":"LLHash",
        "Description":"Tools for Hashing Vector and String Data",
        "Internal Code Repo":"tools\\analytics\\mit-LL\\",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Python"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"20160115",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Next Century Corporation"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Ozone Widget Framework",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/VIS/Neon+-+Next+Century",
        "External Link":"http://owfgoss.org/download.html",
        "Public Code Repo":"https://github.com/ozoneplatform/owf.git",
        "Instructional Material":"",
        "Stats":"owf",
        "Description":"Ozone Widget Framework provides a customizable open-source web application that assembles the tools you need to accomplish any task and enables those tools to communicate with each other. It is a technology-agnostic composition framework for data and visualizations in a common browser-based display and interaction environment that lowers the barrier to entry for the development of big data visualizations and enables efficient exploration of large data sets. (JavaScript)",
        "Internal Code Repo":"",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "JavaScript"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Visualization"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Next Century Corporation"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Neon Visualization Environment",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/VIS/Neon+-+Next+Century",
        "External Link":"http://neonframework.org/",
        "Public Code Repo":"https://github.com/NextCenturyCorporation/neon.git",
        "Instructional Material":"",
        "Stats":"neon",
        "Description":"The Neon framework establishes a datastore-agnostic way for visualizations to query data and perform simple operations on that data such as filtering, aggregation, and transforms. Neon is the middleware component that provides a set of RESTful web services to select a datastore and perform queries and other operations on the data. (Groovy/JavaScript)",
        "Internal Code Repo":"tools\\visualizations\\next-century",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Groovy",
            "JavaScript"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Visualization"
        ],
        "New Date":"",
        "Update Date":"20160119"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Next Century Corporation"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Neon Geotemporal Dashboard (GTD)",
        "Internal Link":"",
        "External Link":"http://neonframework.org/",
        "Public Code Repo":"https://github.com/NextCenturyCorporation/neon-gtd.git",
        "Instructional Material":"",	
        "Stats":"neon-gtd",
        "Description":"The Neon framework establishes a datastore-agnostic way for visualizations to query data and perform operations on that data such as filtering, aggregation, and transforms. Neon Geotemporal Dashboard (GTD) is a front-end application that allows creation of composable dashboards from visualization widgets. The project provides over a dozen widgets, including maps, bar and line charts, data and summary tables and more. Neon GTD allows the user to add and remove widgets, select and filter data, and store and retrieve the dashboard state. (JavaScript)",
        "Internal Code Repo":"tools\\visualizations\\next-century",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Groovy",
            "JavaScript"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Visualization"
        ],
        "New Date":"20160119",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Uncharted Software (formerly Oculus Info Inc.)"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Influent",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/VIS/Aperture+-+Oculus+Home+Page",
        "External Link":"http://uncharted.software/influent",
        "Public Code Repo":"https://github.com/unchartedsoftware/influent.git",
        "Instructional Material":"",
        "Stats":"influent",
        "Description":"Influent is an HTML5 tool for visually and interactively following transaction flow, rapidly revealing actors and behaviors of potential concern that might otherwise go unnoticed. Summary visualization of transactional patterns and actor characteristics, interactive link expansion and dynamic entity clustering enable Influent to operate effectively at scale with big data sources in any modern web browser. Influent has been used to explore data sets with millions of entities and hundreds of millions of transactions. (JavaScript/Java)",
        "Internal Code Repo":"tools\\visualizations\\oculus\\aperture\\influent",
        "License":[
            "MIT"
        ],
        "Languages":[
            "JavaScript",
            "Java"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Visualization"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Uncharted Software (formerly Oculus Info Inc.)"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Salt - Tile-Based Visual Analytics",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/VIS/Aperture+-+Oculus+Home+Page",
        "External Link":"http://saltlib.com/",
        "Public Code Repo":"https://github.com/unchartedsoftware/salt.git",
        "Stats":"salt",
        "Description": "Salt (Scalable Analytic Layered Tiles) is a library for creating interactive visualizations of massive datasets. Salt is the next generation implemention of the visual analytics kernel developed under Aperture Tiles, redesigned for widespread integration and use. Salt's highly performant approach builds on Apache Spark to enables high-fidelity analysis of data at massive scales, revealing phenomena that would otherwise be lost through sampling or coarse aggregation. Using techniques similar to online maps, tailored analytic results are then served at each zoom level in data form for graphic rendering. Salt generates scalable representations of billions of data points, enabling visualizations including geographic heatmaps, cross-plots or time series, and the layering of multiple data sources and dimensions for contextual overlay. (Scala)",
        "Internal Code Repo":"tools\\visualizations\\oculus\\aperture\\demos\\xdata\\SC2013",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Scala"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Visualization"
        ],
        "New Date":"",
        "Update Date":"20160129"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Uncharted Software (formerly Oculus Info Inc.)"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"SparkPipe - Modular Data Pipeline Framework for Spark",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/VIS/Aperture+-+Oculus+Home+Page",
        "External Link":"http://unchartedsoftware.github.io/sparkpipe-core",
        "Public Code Repo":"https://github.com/unchartedsoftware/sparkpipe-core.git",
        "Instructional Material":"",
        "Stats":"sparkpipe-core",
        "Description":"SparkPipe is a modular, non-linear data processing pipeline for Apache Spark. The library facilitates expressing individual components of Spark scripts in a modular standardized way so that they can be reused and connected together into data processing workflow pipelines.SparkPipe comes bundled with core operations which perform a variety of useful tasks, and are intended to serve as aids in implementing more domain-specific operations. (Scala)",
        "Internal Code Repo":"tools\\visualizations\\oculus\\aperture\\oculus-common",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Java",
            "Scala"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Raytheon BBN"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Content and Context-based Graph Analysis: PINT, Patterns in Near-Real Time",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/ANL/Raytheon+BBN+Technologies",
        "External Link":"https://github.com/plamenbbn/XDATA",
        "Public Code Repo":"https://github.com/plamenbbn/XDATA.git",
        "Instructional Material":"Not Available",
        "Stats":"XDATA",
        "Description":"Patterns in Near-Real Time will take any corpus as input and quantify the strength of the query match to a SME-based process model, represent process model as a Directed Acyclic Graph (DAG), and then search and score potential matches. (Python)",
        "Internal Code Repo":"tools\\analytics\\bbn\\graph-matching",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Python"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":"20140820"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Raytheon BBN"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Content and Context-based Graph Analysis: NILS, Network Inference of Link Strength",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/ANL/Raytheon+BBN+Technologies",
        "External Link":"https://github.com/plamenbbn/XDATA",
        "Public Code Repo":"https://github.com/plamenbbn/XDATA.git",
        "Instructional Material":"Not Available",
        "Stats":"XDATA",
        "Description":"Network Inference of Link Strength will take any text corpus as input and quantify the strength of connections between any pair of entities. Link strength probabilities are computed via shortest path. (Python)",
        "Internal Code Repo":"tools\\analytics\\bbn\\textstructure",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Python"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":"20140820"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Royal Caliber"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"A vertex-centric CUDA/C++ API for large graph analytics on GPUs using the Gather-Apply-Scatter abstraction",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/ANL/Royal+Caliber+LLC%2C+VertexAPI+for+GPU+Graph+Analytics",
        "External Link":"https://github.com/RoyalCaliber/vertexAPI2",
        "Public Code Repo":"https://github.com/RoyalCaliber/vertexAPI2.git",
        "Instructional Material":"Not Available",
        "Stats":"vertexAPI2",
        "Description":"Allows users to express graph algorithms as a series of Gather-Apply-Scatter (GAS) steps similar to GraphLab.  Runs these vertex programs using a single or multiple GPUs - demonstrates a large speedup over GraphLab. (C++)",
        "Internal Code Repo":"tools\\analytics\\RoyalCaliber",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "C++"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":"20140820"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Scientific Systems Company, Inc.",
            "MIT",
            "University of Louisville"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"BayesDB",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/pages/viewpage.action?pageId=7274588",
        "External Link":"http://probcomp.csail.mit.edu/bayesdb/",
        "Public Code Repo":"https://github.com/mit-probabilistic-computing-project/BayesDB.git",
        "Instructional Material":"",
        "Stats":"BayesDB",
        "Description":"BayesDB is an open-source implementation of a predictive database table. It provides predictive extensions to SQL that enable users to query the implications of their data -- predict missing entries, identify predictive relationships between columns, and examine synthetic populations -- based on a Bayesian machine learning system in the back end. (Python)",
        "Internal Code Repo":"tools\\analytics\\ssci-mit-ul\\tabular-predDB",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Python"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program": "XDATA",
        "Program Teams": [
            "Sotera Defense Solutions, Inc."
        ],
        "Contributors": [
            ""
        ],
        "Sub-contractors": [
            ""
        ],
        "Software": "Zephyr",
        "Internal Link": "https://xd-wiki.xdata.data-tactics-corp.com:8443/display/ANL/Sotera+Defense+Systems+-+Goals+and+Analytics",
        "External Link": "http://sotera.github.io/zephyr/",
        "Public Code Repo": "http://github.com/Sotera/zephyr",
        "Instructional Material": "",
        "Stats": "zephyr",
        "Description": "Zephyr is a big data, platform agnostic Extract-Transform-Load (ETL) API, with Hadoop MapReduce, Storm, and other big data bindings. (Java)",
        "Internal Code Repo": "tools\\utilities\\sotera\\zephyr; tools\\utilties\\sotera\\zephyr-xdata-ingest",
        "License": [
            "ALv2"
        ],
        "Languages": [
            "Java"
        ],
        "Platform Requirements": [
            ""
        ],
        "Dependent modules": [
            "Zephyr Sample Project"
        ],
        "Dependent module URLs": [
            "http://sotera.github.io/zephyr/Examples/"
        ],
        "Component modules": [
            "GIT",
            "Gradle",
            "Java 7",
            "Cloudera CDH 5.0.0 (MRv1) OR CDH 4.x.x (MRv1)"
        ],
        "Component module URLs": [
            "http://git-scm.com/",
            "http://www.gradle.org/",
            "https://www.java.com/en/download/",
            "http://www.cloudera.com/content/cloudera/en/products-and-services/cdh.html"
        ],
        "Industry": [
            ""
        ],
        "Functionality": [
            ""
        ],
        "Categories": [
            "Infrastructure"
        ],
        "New Date": "",
        "Update Date": "20140708"
    },
    {
        "DARPA Program": "XDATA",
        "Program Teams": [
          "Sotera Defense Solutions, Inc."
        ],
        "Contributors": [
          ""
        ],
        "Sub-contractors": [
          ""
        ],
        "Software": "Aggregate Micro Paths",
        "Internal Link": "https://xd-wiki.xdata.data-tactics-corp.com:8443/display/ANL/Sotera+Defense+Systems+-+Goals+and+Analytics",
        "External Link": "http://sotera.github.io/aggregate-micro-paths/",
        "Public Code Repo": "https://github.com/Sotera/aggregate-micro-paths.git",
        "Instructional Material": "",
        "Stats": "aggregate-micro-paths",
        "Description": "An analytic to help infer movement patterns from large amounts of geospatial-temporal data in a cloud environment. (Python, Scala)",
        "Internal Code Repo": "tools\\analytics\\sotera\\SparkMicroPath\\",
        "License": [
            "ALv2"
        ],
        "Languages": [
            "Python",
            "Scala"
        ],
        "Platform Requirements": [
            ""
        ],
        "Dependent modules": [
            "Track Communities"
        ],
        "Dependent module URLs": [
            "https://github.com/Sotera/track-communities"
        ],
        "Component modules": [
            "Cloudera CDH",
            "Apache Hive"
        ],
        "Component module URLs": [
            "http://www.cloudera.com/content/cloudera/en/products-and-services/cdh.html",
            "http://hive.apache.org/"
        ],
        "Industry": [
            ""
        ],
        "Functionality": [
            ""
        ],
        "Categories": [
            "Analytics"
        ],
        "New Date": "",
        "Update Date": "20140708"
    },
    {
        "DARPA Program": "XDATA",
        "Program Teams": [
            "Sotera Defense Solutions, Inc."
        ],
        "Contributors": [
            ""
        ],
        "Sub-contractors": [
            ""
        ],
        "Software": "RHIPE ARIMA",
        "Internal Link": "https://xd-wiki.xdata.data-tactics-corp.com:8443/display/ANL/Sotera+Defense+Systems+-+Goals+and+Analytics",
        "External Link": "https://github.com/Sotera/rhipe-arima",
        "Public Code Repo": "https://github.com/Sotera/rhipe-arima",
        "Instructional Material": "",
        "Stats": "rhipe-arima",
        "Description": "This implementation of the ARIMA (AutoRegressive Integrated Moving \nAverage) algorithm is based on R, Hadoop, and the RHIPE (Hree-pay) framework. (R)",
        "Internal Code Repo": "tools\\analytics\\sotera\\arima\\",
        "License": [
            "ALv2"
        ],
        "Languages": [
            "R"
        ],
        "Platform Requirements": [
            ""
        ],
        "Dependent modules": [
            ""
        ],
        "Dependent module URLs": [
            ""
        ],
        "Component modules": [
            "Cloudera CDH",
            "RHIPE",
            "R"
        ],
        "Component module URLs": [
            "http://www.cloudera.com/content/cloudera/en/products-and-services/cdh.html",
            "http://www.datadr.org/install.html",
            "http://www.r-project.org/"
        ],
        "Industry": [
            ""
        ],
        "Functionality": [
            ""
        ],
        "Categories": [
            "Analytics"
        ],
        "New Date": "",
        "Update Date": "20140708"
    },
    {
        "DARPA Program": "XDATA",
        "Program Teams": [
            "Sotera Defense Solutions, Inc."
        ],
        "Contributors": [
            ""
        ],
        "Sub-contractors": [
            ""
        ],
        "Software": "Correlation Approximation",
        "Internal Link": "https://xd-wiki.xdata.data-tactics-corp.com:8443/display/ANL/Sotera+Defense+Systems+-+Goals+and+Analytics",
        "External Link": "https://github.com/Sotera/correlation-approximation",
        "Public Code Repo": "https://github.com/Sotera/correlation-approximation",
        "Instructional Material": "",
        "Stats": "correlation-approximation",
        "Description": "Spark implementation of the Google Correlate algorithm to quickly find highly correlated vectors in huge datasets. (Scala)",
        "Internal Code Repo": "tools\\analytics\\sotera\\CorrelationApproximation",
        "License": [
            "ALv2"
        ],
        "Languages": [
            "Scala"
        ],
        "Platform Requirements": [
            ""
        ],
        "Dependent modules": [
            ""
        ],
        "Dependent module URLs": [
            ""
        ],
        "Component modules": [
            "Gradle",
            "Cloudera CDH",
            "Spark"
        ],
        "Component module URLs": [
            "http://www.gradle.org/",
            "http://www.cloudera.com/content/cloudera/en/products-and-services/cdh.html",
            "http://http//spark.incubator.apache.org/"
        ],
        "Industry": [
            ""
        ],
        "Functionality": [
            ""
        ],
        "Categories": [
            "Analytics"
        ],
        "New Date": "",
        "Update Date": "20140624"
    },
    {
        "DARPA Program": "XDATA",
        "Program Teams": [
            "Sotera Defense Solutions, Inc."
        ],
        "Contributors": [
            ""
        ],
        "Sub-contractors": [
            ""
        ],
        "Software": "Graphene",
        "Internal Link": "https://xd-wiki.xdata.data-tactics-corp.com:8443/display/ANL/Sotera+Defense+Systems+-+Goals+and+Analytics",
        "External Link": "https://github.com/Sotera/graphene",
        "Public Code Repo": "https://github.com/Sotera/graphene",
        "Instructional Material": "",
        "Stats": "graphene",
        "Description": "Graphene is a web-based application that provides combined query, visualization, link identification and analysis, and other analytic capabilities within a single system.  It allows a user the ability to intelligently search structured data from multiple data sources and can display transactional views, transactional graphs evolving over time, related-entity (shared-attribute network) graphs, drillable transaction histograms, directional transaction charts, activity plots, data export, and more.  The combination of these capabilities makes it a valuable tool for analyzing any kind of data that can be manipulated to reveal transactions and relationships of any sort. (Java, JavaScript)",
        "Internal Code Repo": "tools\\analytics\\sotera\\Graphene",
        "License": [
            "ALv2"
        ],
        "Languages": [
            "Java",
            "JavaScript"
        ],
        "Platform Requirements": [
            "Java 7",
            "Tomcat"
        ],
        "Dependent modules": [
            ""
        ],
        "Dependent module URLs": [
            ""
        ],
        "Component modules": [
            "Apache Maven"
        ],
        "Component module URLs": [
            "http://maven.apache.org/"
        ],
        "Industry": [
            ""
        ],
        "Functionality": [
            ""
        ],
        "Categories": [
            "Visualization"
        ],
        "New Date": "",
        "Update Date": "20140708"
    },
    {
        "DARPA Program": "XDATA",
        "Program Teams": [
            "Sotera Defense Solutions, Inc."
        ],
        "Contributors": [
            ""
        ],
        "Sub-contractors": [
            ""
        ],
        "Software": "Distributed Graph Analytics",
        "Internal Link": "",
        "External Link": "http://sotera.github.io/distributed-graph-analytics/",
        "Public Code Repo": "https://github.com/Sotera/distributed-graph-analytics",
        "Instructional Material": "",
        "Stats": "distributed-graph-analytics",
        "Description": "Distributed Graph Analytics (DGA) is a compendium of graph analytics written for Bulk-Synchronous-Parallel (BSP) processing frameworks such as Giraph and GraphX. The analytics included are High Betweenness Set Extraction, Weakly Connected Components, Page Rank, Leaf Compression, and Louvain Modularity. (Scala, Java)",
        "Internal Code Repo": "",
        "License": [
            "ALv2"
        ],
        "Languages": [
            "Scala",
            "Java"
        ],
        "Platform Requirements": [
            ""
        ],
        "Dependent modules": [
            ""
        ],
        "Dependent module URLs": [
            ""
        ],
        "Component modules": [
            "Git",
            "Gradle",
            "Java 7",
            "Apache Giraph 1.1.0-SNAPSHOT (Built for CDH 5.0.0 or CDH 4.7.0)",
            "CDH 5.0.0 (MRv1)"
        ],
        "Component module URLs": [
            "http://git-scm.com/",
            "http://www.gradle.org/",
            "https://www.java.com/en/download/",
            "https://giraph.apache.org/",
            "http://www.cloudera.com/content/cloudera/en/home.html"
        ],
        "Industry": [
            ""
        ],
        "Functionality": [
            ""
        ],
        "Categories": [
            "Analytics"
        ],
        "New Date": "",
        "Update Date": "20140708"
    },
    {
        "DARPA Program": "XDATA",
        "Program Teams": [
            "Sotera Defense Solutions, Inc."
        ],
        "Contributors": [
            ""
        ],
        "Sub-contractors": [
            ""
        ],
        "Software": "Track Communities",
        "Internal Link": "",
        "External Link": "https://github.com/Sotera/track-communities",
        "Public Code Repo": "https://github.com/Sotera/track-communities.git",
        "Instructional Material": "",
        "Stats": "track-communities",
        "Description": "An analytic for creating networks from geo-temporal track data based on time/space co-occurrence. Includes UI for visualization of communities and tracks.  This tool is a synthesis of several analytic components and visualization techniques that allow a user to browse a network of communities, follow tracks of movement, and observe co-location highlights within a dynamic graph. (Python, JavaScript)",
        "Internal Code Repo": "",
        "License": [
            "ALv2"
        ],
        "Languages": [
            "Python",
            "JavaScript"
        ],
        "Platform Requirements": [
            ""
        ],
        "Dependent modules": [
            ""
        ],
        "Dependent module URLs": [
            ""
        ],
        "Component modules": [
            "Cloudera CDH",
            "Cloudera Impala",
            "Apache Hive",
            "Aggregate Micro Paths",
            "Distributed Louvain Modularity",
            "Tangelo Web Framework"
        ],
        "Component module URLs": [
            "http://www.cloudera.com/content/cloudera/en/products-and-services/cdh.html",
            "http://www.cloudera.com/content/cloudera/en/products-and-services/cdh/impala.html",
            "https://hive.apache.org/",
            "http://sotera.github.io/aggregate-micro-paths/",
            "http://sotera.github.io/distributed-louvain-modularity/",
            "http://tangelo.kitware.com/"
        ],
        "Industry": [
            ""
        ],
        "Functionality": [
            ""
        ],
        "Categories": [
            "Analytics",
            "Visualization"
        ],
        "New Date": "",
        "Update Date": "20140708"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Stanford University - Boyd"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"LowRankModels.jl",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/ANL/Stanford+Convex+Optimization+Group",
        "External Link":"https://github.com/madeleineudell/LowRankModels.jl",
        "Public Code Repo":"https://github.com/madeleineudell/LowRankModels.jl.git",
        "Instructional Material":"",
        "Stats":"LowRankModels.jl",
        "Description":"LowRankModels.jl is a julia package for modeling and fitting generalized low rank models (GLRMs). GLRMs model a data array by a low rank matrix, and include many well known models in data analysis, such as principal components analysis (PCA), matrix completion, robust PCA, nonnegative matrix factorization, k-means, and many more. LowRankModels fits GLRMs using an alternating directions proximal gradient algorithm. GLRMs and algorithms for fitting GLRMs are described in detail in an associated paper, at http://www.stanford.edu/~boyd/papers/glrm.html (which also links to the code). (Julia)",
        "Internal Code Repo":"",
        "License":[
            "MIT"
        ],
        "Languages":[
            "Julia"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"20141014",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Stanford University - Boyd"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"SCS (Self-dual Cone Solver)",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/ANL/Stanford+Convex+Optimization+Group",
        "External Link":"https://github.com/cvxgrp/scs",
        "Public Code Repo":"https://github.com/cvxgrp/scs.git",
        "Instructional Material":"",
        "Stats":"scs",
        "Description":"Implementation of a solver for general cone programs, including linear, second-order, semidefinite and exponential cones, based on an operator splitting method applied to a self-dual homogeneous embedding. The method and software supports both direct factorization, with factorization caching, and an indirect method, that requires only the operator associated with the problem data and its adjoint. The implementation includes interfaces to CVX, CVXPY, matlab, as well as test routines. This code is described in detail in an associated paper, at http://www.stanford.edu/~boyd/papers/pdos.html (which also links to the code). (C)",
        "Internal Code Repo":"",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "C"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Stanford University - Boyd"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"ECOS: An SOCP Solver for Embedded Systems",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/ANL/Stanford+Convex+Optimization+Group",
        "External Link":"https://github.com/ifa-ethz/ecos",
        "Public Code Repo":"https://github.com/ifa-ethz/ecos.git",
        "Instructional Material":"",
        "Stats":"ecos",
        "Description":"ECOS is a lightweight primal-dual homogeneous interior-point solver for SOCPs, for use in embedded systems as well as a base solver for use in large scale distributed solvers. It is described in the paper at http://www.stanford.edu/~boyd/papers/ecos.html. (C)",
        "Internal Code Repo":"",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "C"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program": "XDATA", 
        "Program Teams": [
            "Phronesis", 
            "LLC"
        ], 
        "Contributors": [
            "Not Applicable"
        ], 
        "Sub-contractors": [
            "Not Applicable"
        ], 
        "Software": "Geofin", 
        "Internal Link": "Not Yet Available", 
        "External Link": "https://github.com/phronesis-mnemosyne/geofin-open-catalog", 
        "Public Code Repo": "https://github.com/phronesis-mnemosyne/geofin-open-catalog", 
        "Instructional Material": "", 
        "Stats": "", 
        "Description": "Geofin allows exploration of patterns in data at global, national, local, and human scales. Quickly triage locations and entities to find patterns and trends using customizable summary statistics and visualizations. (JavaScript, Elasticsearch)", 
        "Internal Code Repo": "", 
        "License": [
            "ALv2"
        ], 
        "Languages": [
            "JavaScript", 
            "Elasticsearch"
        ], 
        "Platform Requirements": [
            "Linux", 
            "OSX"
        ], 
        "Dependent modules": [
            ""
        ], 
        "Dependent module URLs": [
            ""
        ], 
        "Component modules": [
            ""
        ], 
        "Component module URLs": [
            ""
        ], 
        "Industry": [
            ""
        ], 
        "Functionality": [
            "Dynamic Web Applications", 
            "Javascript", 
            "Geo", 
            "Mapping", 
            "Triage", 
            "Exploratory Data Analysis"
        ], 
        "Categories": [
            "Visualization"
        ], 
        "New Date": "20150929", 
        "Update Date": ""
    }, 
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Stanford University - Boyd"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"CVXPY",
        "Internal Link":"",
        "External Link":"http://www.cvxpy.org/",
        "Public Code Repo":"https://github.com/cvxgrp/cvxpy.git",
        "Instructional Material":"",
        "Stats":"cvxpy",
        "Description":"CVXPY is a Python-embedded modeling language for convex optimization problems. It allows you to express your problem in a natural way that follows the math, rather than in the restrictive standard form required by solvers. (Python)",
        "Internal Code Repo":"",
        "License":[
            "GPLv3"
        ],
        "Languages":[
            "Python"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":"20140617"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Stanford University - Hanrahan"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"imMens",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/pages/viewpage.action?pageId=7274499",
        "External Link":"http://vis.stanford.edu/projects/immens/",
        "Public Code Repo":"https://github.com/uwdata/imMens.git",
        "Instructional Material":"",
        "Stats":"imMens",
        "Description":"imMens is a web-based system for interactive visualization of large databases. imMens uses binned aggregation to produce summary visualizations that avoid the shortcomings of standard sampling-based approaches. Through data decomposition methods (to limit data transfer) and GPU computation via WebGL (for parallel query processing), imMens enables real-time (50fps) visual querying of billion+ element databases. (JavaScript)",
        "Internal Code Repo":"tools\\analytics\\stanford-h",
        "License":[
            "BSD"
        ],
        "Languages":[
            "JavaScript"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Visualization"
        ],
        "New Date":"",
        "Update Date":"20140814"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "PNNL", "Purdue University"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Tessera",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/pages/viewpage.action?pageId=7274499",
        "External Link":"http://tessera.io/",
        "Public Code Repo":"https://github.com/tesseradata",
        "Instructional Material":"2014-07",
        "Stats":"Tessera",
        "Description":"Tessera is an open source environment for deep analysis of big data. At the front end, the analyst programs in R, and has access to the thousands of methods of statistics, machine learning, and visualization implemented in R. At the back end is a distributed parallel computational environment such as Hadoop, that enables scaling to big data. In between are three Tessera packages: datadr, Trelliscope, and RHIPE (R and Hadoop Integrated Programming Environment). These packages enable the data analyst to communicate with the back end by simple R commands, and not have to worry about the details of distributed parallel computation. Tessera is powered by a statistical approach to large complex data, Divide and Recombine (D&R). The data are parallelized, not the thousands of methods, which makes back end computation typically very nearly embarrassingly parallel, and therefore very fast. But at the same time, D&R statistical division and recombination methods ensure good statistical performance.",
        "Internal Code Repo":"tools\\analytics\\stanford-h",
        "License":[
            "BSD",
            "ALv2"
        ],
        "Languages":[
            "R",
            "Java",
            "C"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure", "Analytics", "Visualization"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Stanford University - Hanrahan"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Riposte",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/pages/viewpage.action?pageId=7274499",
        "External Link":"https://github.com/jtalbot/riposte",
        "Public Code Repo":"https://github.com/jtalbot/riposte.git",
        "Instructional Material":"",
        "Stats":"riposte",
        "Description":"Riposte is a fast interpreter and JIT for R. The Riposte VM has two cooperative subVMs for R scripting (like Java) and for R vector computation (like APL). Our scripting code has been 2-4x faster in Riposte than in R's recent bytecode interpreter. Vector-heavy code is 5-10x faster. Speeding up R can greatly increase the analyst's efficiency. (C/R)",
        "License":[
            "BSD"
        ],
        "Languages":[
            "C",
            "R"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Stanford University - Olukotun"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Delite",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/XSW2013/Stanford+XGraph",
        "External Link":"http://stanford-ppl.github.io/Delite/index.html",
        "Public Code Repo":"https://github.com/stanford-ppl/hyperdsl",
        "Instructional Material":"",
        "Stats":"hyperdsl",
        "Description":"Delite is a compiler framework and runtime for parallel embedded domain-specific languages (DSLs). (Scala)",
        "Internal Code Repo":"tools\\analytics\\stanford-o",
        "License":[
            "BSD"
        ],
        "Languages":[
            "Scala"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":"20140624"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Stanford University - Olukotun"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"DeepDive",
        "Internal Link":"",
        "External Link":"http://deepdive.stanford.edu/",
        "Public Code Repo":"https://github.com/HazyResearch/deepdive.git",
        "Instructional Material":"",
        "Stats":"deepdive",
        "Description":"DeepDive is a new type of knowledge base construction system that enables developers to analyze data on a deeper level than ever before. Many applications have been built using DeepDive to extract data from millions of documents, Web pages, PDFs, tables, and figures. DeepDive is a trained system, which means that it uses machine-learning techniques to incorporate domain-specific knowledge and user feedback to improve the quality of its analysis. DeepDive can deal with noisy and imprecise data by producing calibrated probabilities for every assertion it makes. DeepDive offers a scalable, high-performance learning engine. (SQL, Python, C++)",
        "Internal Code Repo":"",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "SQL",
            "Python",
            "C++"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"20140618",
        "Update Date":"20140618"
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Stanford University - Olukotun"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"SNAP",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/XSW2013/Stanford+XGraph",
        "External Link":"https://snap.stanford.edu/",
        "Public Code Repo":"https://github.com/snap-stanford/snap",
        "Instructional Material":"",
        "Stats":"snap",
        "Description":"Stanford Network Analysis Platform (SNAP) is a general purpose network analysis and graph mining library. It is written in C++ and easily scales to massive networks with hundreds of millions of nodes, and billions of edges. It efficiently manipulates large graphs, calculates structural properties, generates regular and random graphs, and supports attributes on nodes and edges. (C++)",
        "Internal Code Repo":"tools\\analytics\\stanford-o",
        "License":[
            "BSD"
        ],
        "Languages":[
            "C++"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Stanford University - Olukotun"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Snap.py",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/XSW2013/Stanford+XGraph",
        "External Link":"http://snap.stanford.edu/snappy/",
        "Public Code Repo":"https://github.com/snap-stanford/snap",
        "Instructional Material":"",
        "Stats":"snap",
        "Description":"Snap.py is a Python interface for SNAP. SNAP is a general purpose, high performance system for analysis and manipulation of large networks.",
        "Internal Code Repo":"tools\\analytics\\stanford-o",
        "License":[
            "BSD"
        ],
        "Languages":[
            "Python"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"20140701",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "SYSTAP, LLC"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"bigdata",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/ANL/SYSTAP%2C+LLC",
        "External Link":"http://sourceforge.net/projects/bigdata/",
        "Public Code Repo":"https://bigdata.svn.sourceforge.net/svnroot/bigdata/",
        "Instructional Material":"Not Available",
        "Stats":"bigdata",
        "Description":"Bigdata enables massively parallel graph processing on GPUs and many core CPUs. The approach is based on the decomposition of a graph algorithm as a vertex program. The initial implementation supports an API based on the GraphLab 2.1 Gather Apply Scatter (GAS) API. Execution is available on GPUs, Intel Xenon Phi (aka MIC), and multi-core GPUs.",
        "Internal Code Repo":"tools\\analytics\\SYSTAP",
        "License":[
            "GPLv2"
        ],
        "Languages":[
            ""
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "SYSTAP, LLC"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"MapGraph",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/ANL/SYSTAP%2C+LLC",
        "External Link":"https://sourceforge.net/projects/mpgraph/",
        "Public Code Repo":"http://svn.code.sf.net/p/mpgraph/code/",
        "Instructional Material":"http://www.systap.com/mapgraph/api/html/index.html",
        "Stats":"mpgraph",
        "Description":"MapGraph enables massively parallel graph processing on GPUs and many core CPUs. The approach is based on the decomposition of a graph algorithm as a vertex program. The initial implementation supports an API based on the GraphLab 2.1 Gather Apply Scatter (GAS) API. Execution is available on GPUs, Intel Xenon Phi (aka MIC), and multi-core GPUs.",
        "Internal Code Repo":"tools\\analytics\\SYSTAP",
        "License":[
            "ALv2"
        ],
        "Languages":[
            ""
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "University of California - Davis"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Gunrock",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/ANL/SYSTAP%2C+LLC",
        "External Link":"http://gunrock.github.io/gunrock/",
        "Public Code Repo":"https://github.com/gunrock/gunrock.git",
        "Instructional Material":"",
        "Stats":"gunrock",
        "Description":"Gunrock is a CUDA library for graph primitives that refactors, integrates, and generalizes best-of-class GPU implementations of breadth-first search, connected components, and betweenness centrality into a unified code base useful for future development of high-performance GPU graph primitives. (CUDA C/C++)",
        "Internal Code Repo":"tools\\analytics\\SYSTAP",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "CUDA",
            "C",
            "C++"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Analytics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Draper Laboratory"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"USER-ALE: User Activity Logging Engine",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/XSW2013/draper@summerCamp2013",
        "External Link":"http://draperlaboratory.github.io/user-ale/",
        "Public Code Repo":"https://github.com/draperlaboratory/user-ale.git",
        "Instructional Material":"http://draperlaboratory.github.io/user-ale/",
        "Stats":"user-ale",
        "Description":"Analytic Activity Logger is an API that creates a common message passing interface to allow heterogeneous software components to communicate with an activity logging engine. Recording a user's analytic activities enables estimation of operational context and workflow. Combined with psychophysiology sensing, analytic activity logging further enables estimation of the user's arousal, cognitive load, and engagement with the tool. (JavaScript)",
        "Internal Code Repo":"tools\\utilities\\draper",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "JavaScript"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "University of California - Berkeley"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"BDAS",
        "Internal Link":"",
        "External Link":"https://amplab.cs.berkeley.edu/software/",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Stats":"",
        "Description":"BDAS, the Berkeley Data Analytics Stack, is an open source software stack that integrates software components being built by the AMPLab to make sense of Big Data.",
        "Internal Code Repo":"",
        "License":[
            "ALv2",
            "BSD"
        ],
        "Languages":[
            ""
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "University of California - Berkeley"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Spark",
        "Internal Link":"",
        "External Link":"http://spark.incubator.apache.org/",
        "Public Code Repo":"https://github.com/apache/spark.git",
        "Instructional Material":"",
        "Stats":"spark",
        "Description":"Apache Spark is an open source cluster computing system that aims to make data analytics both fast to run and fast to write. To run programs faster, Spark offers a general execution model that can optimize arbitrary operator graphs, and supports in-memory computing, which lets it query data faster than disk-based engines like Hadoop. To make programming faster, Spark provides clean, concise APIs in Python, Scala and Java. You can also use Spark interactively from the Scala and Python shells to rapidly query big datasets. (Java/Scala/Python)",
        "Internal Code Repo":"N/A",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Java",
            "Scala",
            "Python"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "University of California - Berkeley"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Shark",
        "Internal Link":"",
        "External Link":"https://github.com/amplab/shark",
        "Public Code Repo":"https://github.com/amplab/shark.git",
        "Instructional Material":"",
        "Stats":"shark",
        "Description":"Shark is a large-scale data warehouse system for Spark that is designed to be compatible with Apache Hive. It can execute Hive QL queries up to 100 times faster than Hive without any modification to the existing data or queries. Shark supports Hive's query language, metastore, serialization formats, and user-defined functions, providing seamless integration with existing Hive deployments and a familiar, more powerful option for new ones. (Scala)",
        "Internal Code Repo":"N/A",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Scala"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "University of California - Berkeley"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"BlinkDB",
        "Internal Link":"N/A",
        "External Link":"http://blinkdb.org/",
        "Public Code Repo":"https://github.com/sameeragarwal/blinkdb.git",
        "Instructional Material":"",
        "Stats":"blinkdb",
        "Description":"BlinkDB is a massively parallel, approximate query engine for running interactive SQL queries on large volumes of data. It allows users to trade-off query accuracy for response time, enabling interactive queries over massive data by running queries on data samples and presenting results annotated with meaningful error bars. To achieve this, BlinkDB uses two key ideas: (1) An adaptive optimization framework that builds and maintains a set of multi-dimensional samples from original data over time, and (2) A dynamic sample selection strategy that selects an appropriately sized sample based on a query's accuracy and/or response time requirements. We have evaluated BlinkDB on the well-known TPC-H benchmarks, a real-world analytic workload derived from Conviva Inc. and are in the process of deploying it at Facebook Inc. (Scala)",
        "Internal Code Repo":"N/A",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Scala"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "University of California - Berkeley"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Mesos",
        "Internal Link":"N/A",
        "External Link":"http://mesos.apache.org/",
        "Public Code Repo":"https://git-wip-us.apache.org/repos/asf/mesos.git",
        "Instructional Material":"",
        "Stats":"mesos",
        "Description":"Apache Mesos is a cluster manager that provides efficient resource isolation and sharing across distributed applications, or frameworks. It can run Hadoop, MPI, Hypertable, Spark, and other applications on a dynamically shared pool of nodes. (C++/Java/Python)",
        "Internal Code Repo":"N/A",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "C++",
            "Java",
            "Python"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "University of California - Berkeley"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Tachyon",
        "Internal Link":"N/A",
        "External Link":"https://github.com/amplab/tachyon",
        "Public Code Repo":"https://github.com/amplab/tachyon.git",
        "Instructional Material":"",
        "Stats":"tachyon",
        "Description":"Tachyon is a fault tolerant distributed file system enabling reliable file sharing at memory-speed across cluster frameworks, such as Spark and MapReduce. It achieves high performance by leveraging lineage information and using memory aggressively. Tachyon caches working set files in memory, and enables different jobs/queries and frameworks to access cached files at memory speed. Thus, Tachyon avoids going to disk to load datasets that are frequently read. (Java)",
        "Internal Code Repo":"N/A",
        "License":[
            "BSD"
        ],
        "Languages":[
            "Java"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "USC"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"GoFFish",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/pages/viewpage.action?pageId=6717524",
        "External Link":"https://github.com/usc-cloud/goffish",
        "Public Code Repo":"https://github.com/usc-cloud/goffish.git",
        "Instructional Material":"https://github.com/usc-cloud/goffish/blob/master/README.md",
        "Stats":"goffish",
        "Description":"The GoFFish project offers a distributed framework for storing timeseries graphs and composing graph analytics. It takes a clean-slate approach that leverages best practices and patterns from scalable data analytics such as Hadoop, HDFS, Hive, and Giraph, but with an emphasis on performing native analytics on graph (rather than tuple) data structures. This offers an more intuitive storage, access and programming model for graph datasets while also ensuring performance optimized for efficient analysis over large graphs (millions-billions of vertices) and many instances of them (thousands-millions of graph instances). (Slash/Java)",
        "Internal Code Repo":"N/A",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Slash",
            "Java"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            "Connected Components",
            "Page Rank",
            "Single Shortest Path"
        ],
        "Component module URLs":[
            "https://github.com/usc-cloud/goffish/tree/master/goffish-trunk/gopher/samples/connected-components",
            "https://github.com/usc-cloud/goffish/tree/master/goffish-trunk/gopher/samples/page-rank",
            "https://github.com/usc-cloud/goffish/tree/master/goffish-trunk/gopher/samples/shortest-path"
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Data Tactics Corporation"
        ],
        "Contributors":[
            ""
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"Escher",
        "Internal Link":"",
        "External Link":"http://escher.io/",
        "Public Code Repo":"https://github.com/gocircuit/escher.git",
        "Instructional Material":"",
        "Stats":"escher",
        "Description":"Escher is a minimal metaphor programming language that plays as a lego block for intelligent translation across foreign semantics of heterogenous technologies. (Go)",
        "Internal Code Repo":"",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "Go"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            "Programming Languages"
        ],
        "Categories":[
            "Infrastructure"
        ],
        "New Date":"20140827",
        "Update Date":""
    },
    {
        "DARPA Program":"XDATA",
        "Program Teams":[
            "Harvard",
            "Kitware, Inc."
        ],
        "Contributors":[
            "Harvard Medical School",
			"Harvard Kennedy School of Government"
        ],
        "Sub-contractors":[
            ""
        ],
        "Software":"UpSet",
        "Internal Link":"https://xd-wiki.xdata.data-tactics-corp.com:8443/display/VIS/Visual+Design+Environment-Kitware+Home",
        "External Link":"http://vcg.github.io/upset",
        "Public Code Repo":"https://github.com/VCG/upset.git",
        "Instructional Material":"https://github.com/vcg/upset/",
        "Stats":"upset",
        "Description":"Understanding relationships between sets is an important analysis task that has received widespread attention in the visualization community. The major challenge in this context is the combinatorial explosion of the number of set intersections if the number of sets exceeds a trivial threshold. To address this, we introduce UpSet, a novel visualization technique for the quantitative analysis of sets, their intersections, and aggregates of intersections. </BR>UpSet is focused on creating task-driven aggregates, communicating the size and properties of aggregates and intersections, and a duality between the visualization of the elements in a dataset and their set membership. UpSet visualizes set intersections in a matrix layout and introduces aggregates based on groupings and queries. The matrix layout enables the effective representation of associated data, such as the number of elements in the aggregates and intersections, as well as additional summary statistics derived from subset or element attributes.</BR>Sorting according to various measures enables a task-driven analysis of relevant intersections and aggregates. The elements represented in the sets and their associated attributes are visualized in a separate view. Queries based on containment in specific intersections, aggregates or driven by attribute filters are propagated between both views. UpSet also introduces several advanced visual encodings and interaction methods to overcome the problems of varying scales and to address scalability. (JavaScript)",
        "Internal Code Repo":"tools\\visualizations\\kitware\\xdata-apps",
        "License":[
            "MIT"
        ],
        "Languages":[
            "JavaScript"
        ],
        "Platform Requirements":[
            ""
        ],
        "Dependent modules":[
            ""
        ],
        "Dependent module URLs":[
            ""
        ],
        "Component modules":[
            ""
        ],
        "Component module URLs":[
            ""
        ],
        "Industry":[
            ""
        ],
        "Functionality":[
            ""
        ],
        "Categories":[
            "Visualization"
        ],
        "New Date":"20140828",
        "Update Date":""
    },
    {
        "DARPA Program": "XDATA", 
        "Program Teams": [
            "Qadium"
        ], 
        "Contributors": [
            ""
        ], 
        "Sub-contractors": [
            ""
        ], 
        "Software": "Data Microscopes", 
        "Internal Link": "", 
        "External Link": "https://github.com/datamicroscopes/", 
        "Public Code Repo": "https://github.com/datamicroscopes/", 
        "Instructional Material": "", 
        "Stats": "datamicroscopes", 
        "Description": "Data Microscopes is a collection of robust, validated Bayesian nonparametric models for discovering structure in data. Models for tabular, relational, text, and time-series data can accommodate multiple data types, including categorical, real-valued, binary, and spatial data. Inference and visualization of results respects the underlying uncertainty in the data, allowing domain experts to feel confident in the quality of the answers they receive. (Python, C++)", 
        "Internal Code Repo": "", 
        "License": [
            "BSD"
        ], 
        "Languages": [
            "Python", 
            "C++"
        ], 
        "Platform Requirements": [
            "C++11 compiler.  Full requirements given on: https://github.com/datamicroscopes/common"
        ], 
        "Dependent modules": [
            ""
        ], 
        "Dependent module URLs": [
            ""
        ], 
        "Component modules": [
            ""
        ], 
        "Component module URLs": [
            ""
        ], 
        "Industry": [
            ""
        ], 
        "Functionality": [
            "Machine Learning", 
            "Bayesian Nonparametrics"
        ], 
        "Categories": [
            "Analytics"
        ], 
        "New Date": "20150413", 
        "Update Date": ""
    }, 
	{
        "DARPA Program": "XDATA", 
        "Program Teams": [
            "Carnegie Mellon University"
        ], 
        "Contributors": [
            "Carnegie Mellon University"
        ], 
        "Sub-contractors": [
            ""
        ], 
        "Software": "Active Search", 
        "Internal Link": "", 
        "External Link": "https://github.com/AutonlabCMU/ActiveSearch", 
        "Public Code Repo": "https://github.com/AutonlabCMU/ActiveSearch.git", 
        "Instructional Material": "", 
        "Stats": "ActiveSearch", 
        "Description": "ActiveSearch takes a collection of emails (or any dataset where a similarity can be generated between elements) and recommends related messages based on user feedback. The user provides an initial seed email then enters into a cycle where ActiveSearch provides a similar email and the user reports whether or not the email was interesting.ActiveSearch is useful for anyone navigating a large set of emails and looking for related messages on a specific topic. As it considers the similarities between emails as well as user feedback, it is an improvement in accuracy, time, and effort over basic text search or a brute force search.(Java, Perl)", 
        "Internal Code Repo": "", 
        "License": [
            "MIT"
        ], 
        "Languages": [
            "Java", 
            "Perl"
        ], 
        "Platform Requirements": [
            "Linux", 
            "(untested but may work on other platforms)"
        ], 
        "Dependent modules": [
            ""
        ], 
        "Dependent module URLs": [
            ""
        ], 
        "Component modules": [
            ""
        ], 
        "Component module URLs": [
            ""
        ], 
        "Industry": [
            ""
        ], 
        "Functionality": [
            "Email", 
            "Search"
        ], 
        "Categories": [
            "Analytics"
        ], 
        "New Date": "20140813", 
        "Update Date": "20140828"
    }
]
